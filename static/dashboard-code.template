local Copas = require "copas"

local Dashboard = _G.js.global.document:getElementById "content"
local loading   = 0
Dashboard.innerHTML = [[
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-6 col-md-offset-3">
        <div class="progress">
          <div id="progress"
               class="progress-bar progress-bar-success progress-bar-striped active"
               role="progressbar"
               aria-valuenow="0"
               aria-valuemin="0"
               aria-valuemax="100"
               style="width:0%">
          </div>
        </div>
      </div>
    </div>
  </div>
]]
local Progress = _G.js.global.document:getElementById "progress"

Copas.addthread (function ()
  local expected = 5 -- seconds
  local step     = 0.25 -- seconds
  while loading do
    local speed = (100 - loading) / (expected / step)
    loading = loading + speed
    Progress:setAttribute ("style", "width:" .. tostring (loading) .. "%")
    Copas.sleep (math.random (0.1, 0.5))
  end
end)

local Client = require "ardoises.client"
local Et     = require "etlua"
local client = Client {
  server = "{{{server}}}",
  tokens = {
    ardoises = "{{{user.tokens.ardoises}}}",
    github   = "{{{user.tokens.github}}}",
  },
}
local ardoises = client:ardoises ()
local output
loading = false

Dashboard.innerHTML = [[
  <div class="container">
    <div class="row">
      <div class="col-md-4">
        <form action="/" method="get">
          <div class="input-group">
            <span class="input-group-addon">
              <i class="fa fa-search"></i>
            </span>
            <input id="search"
                   class="form-control"
                   autofocus
                   type="text"/>
          </div>
        </form>
      </div>
      <div class="col-md-8">
      </div>
    </div>
  </div>
  <section id="ardoises">
  </section>
]]

local Input    = _G.js.global.document:getElementById "search"
local Ardoises = _G.js.global.document:getElementById "ardoises"

Copas.addthread (function ()
  while true do
    Copas.sleep (30) -- seconds
    ardoises = client:ardoises ()
    Copas.wakeup (output)
  end
end)

Copas.addthread (function ()
  while true do
    local back = Input.value
    Copas.sleep (0.5)
    if back ~= Input.value then
      Copas.wakeup (output)
    end
  end
end)

output = Copas.addthread (function ()
  while true do
    local filtered = {}
    for _, ardoise in ipairs (ardoises) do
      if ardoise.repository.full_name:match (Input.value)
      or (ardoise.repository.description or ""):match (Input.value) then
        filtered [#filtered+1] = ardoise
      end
    end
    Ardoises.innerHTML = Et.render ([[
      <div class="container">
        <div class="list-group">
        <% for _, ardoise in ipairs (ardoises) do %>
          <div class="list-group-item row">
            <div class="col-md-1">
              <% if ardoise.collaborator.permissions.push then %>
              <span class="fa-stack fa-lg">
                <i class="fa fa-pencil fa-flip-horizontal fa-stack-1x"></i>
              </span>
              <% else %>
              <span class="fa-stack fa-lg">
                <i class="fa fa-pencil fa-flip-horizontal fa-stack-1x"></i>
                <i class="fa fa-ban fa-stack-2x text-danger"></i>
              </span>
              <% end %>
            </div>
            <div class="col-md-11">
              <h4 class="list-group-item-heading"><%= ardoise.repository.full_name %></h4>
              <p class="list-group-item-text"><%= ardoise.repository.description or ""%></p>
              <ul class="list-inline">
                <% for _, branch in ipairs (ardoise.repository.branches) do %>
                <% if not branch.protected then %>
                <li>
                  <a href="/views/<%- ardoise.repository.owner.login %>/<%- ardoise.repository.name %>/<%- ardoise.branch %>"
                    aria-label="Editor for <%- ardoise.repository.owner.login %>/<%- ardoise.repository.name %>:<%- ardoise.branch %>">
                    <%= branch.name %>
                  </a>
                </li>
                <% end %>
                <% end %>
              </ul>
            </div>
          </div>
        <% end %>
        </div>
      </div>
    ]], {
      ardoises = filtered,
    })
    Copas.sleep (-math.huge)
  end
end)
