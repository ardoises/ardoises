env HOSTNAME;
env DOCKER_URL;
env REDIS_URL;
env ARDOISES_URL;
env APPLICATION_ID;
env APPLICATION_SECRET;
env APPLICATION_TOKEN;
env TWILIO_USERNAME;
env TWILIO_PASSWORD;
env TWILIO_PHONE;
env ADMIN_PHONE;
env ADMIN_EMAIL;

worker_processes 4;
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /usr/local/openresty/nginx/conf/mime.types;
  resolver "8.8.8.8"
           "4.4.4.4";

  server {
    server_name  ardoises.ovh;
    listen      80;
    listen [::]:80;
    location ~ /\.well-known/acme-challenge {
      allow      all;
      root       /data;
      try_files  $uri =404;
    }
    location ~ /\. {
      deny          all;
      access_log    off;
      log_not_found off;
    }
    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }
    add_header Strict-Transport-Security
               "max-age=31536000"
               always;
  }

  server {
    server_name     ardoises.ovh;
    listen          443       ssl;
    listen          [::]:443  ssl;
    default_type    "application/json";
    lua_code_cache  on;
    gzip            on;
    gzip_types      text/plain
                    application/css
                    application/javascript
                    application/lua
                    application/json;

    # https://www.ssllabs.com/ssltest/analyze.html?d=ardoises.ovh&hideResults=on
    # https://www.bjornjohansen.no/optimizing-https-nginx
    ssl_certificate           /etc/letsencrypt/live/ardoises.ovh/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/ardoises.ovh/privkey.pem;
    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       180m;
    ssl_protocols             TLSv1.1 TLSv1.2;
    ssl_stapling              on;
    ssl_stapling_verify       on;
    ssl_prefer_server_ciphers on;
    # ssl_dhparam               /etc/ssl/certs/dhparam.pem;
    ssl_ciphers               "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    add_header                Strict-Transport-Security
                              "max-age=31536000"
                              always;

    location "=/" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        return require "ardoises.server".root ()
      }
    }

    location "=/check-token" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        return require "ardoises.server".check_token ()
      }
    }

    location "=/dashboard" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        return require "ardoises.server".dashboard ()
      }
    }

    location "=/overview" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        return require "ardoises.server".overview ()
      }
    }

    location "=/login" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        return require "ardoises.server".login ()
      }
    }

    location "=/logout" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".logout ()
      }
    }

    location "=/register" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".register ()
      }
    }

    location "=/webhook" {
      limit_except POST {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".webhook ()
      }
    }

    location "~^/my/user$" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".my_user ()
      }
    }

    location "~^/my/ardoises$" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".my_ardoises ()
      }
    }

    location "~^/my/tools$" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".my_tools ()
      }
    }

    location "~^/views/(?<owner>[a-zA-Z0-9_-]+)/(?<name>[a-zA-Z0-9_-]+)/(?<branch>[a-zA-Z0-9_-]+)$" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".view ()
      }
    }

    location "~^/editors/(?<owner>[a-zA-Z0-9_-]+)/(?<name>[a-zA-Z0-9_-]+)/(?<branch>[a-zA-Z0-9_-]+)$" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".editor ()
      }
    }

    location "~^/tools/(?<tool>[a-zA-Z0-9_-]*)$" {
      limit_except HEAD GET OPTIONS POST DELETE {
        deny all;
      }
      content_by_lua_block {
        return require "ardoises.server".tool ()
      }
    }

    location "~^/websockets/(?<owner>[a-zA-Z0-9_-]+)/(?<name>[a-zA-Z0-9_-]+)/(?<branch>[a-zA-Z0-9_-]+)$" {
      set $target "";
      access_by_lua_block {
        return require "ardoises.server".websocket ()
      }
      proxy_pass $target/;
      proxy_http_version 1.1;
      proxy_read_timeout 86400; # 1 day
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location "/lua/" {
      root          /;
      etag          on;
      default_type  "application/lua";
      set           $target   "";
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      access_by_lua_block {
        local name     = ngx.var.uri:match "/lua/(.*)"
        local filename = package.searchpath (name, package.path)
        if filename then
          ngx.var.target = filename
        else
          return ngx.exit (404)
        end
      }
      try_files $target =404;
    }

    location "/static/" {
      limit_except HEAD GET OPTIONS {
        deny all;
      }
      autoindex           on;
      sendfile            on;
      sendfile_max_chunk  1m;
      etag                on;
      root                /;
      try_files           $uri =404;
    }

  }

}
