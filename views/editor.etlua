<section>
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-2">
        <div class="list-group">
          <div class="list-group-item row">
            <div class="input-group">
              <span class="input-xlarge uneditable-input"><%= repository.owner.login %>/<%= repository.name %>:<%= repository.branch %></span>
              <span class="input-group-addon js-gitter-toggle-chat-button"><i class="fa fa-comments fa-inverse" aria-hidden="true"></i></span>
            </div>
          </div>
        </div>
        <div id="layers"></div>
      </div>
      <div id="editor" class="col-md-10">
        <h1 class="text-primary">
          <i class="fully-centered fa fa-spinner fa-pulse fa-5x fa-fw"></i>
        </h1>
      </div>
    </div>
  </div>
</section>

<script type="text/lua"
        lang="Lua">
  -- Taken from lua.vm.js:
  local function load_lua_over_http (url)
    local xhr = _G.js.new (_G.window.XMLHttpRequest)
    xhr:open ("GET", url, false)
    local ok, err = pcall (xhr.send, xhr)
    if not ok then
      return nil, tostring (err)
    elseif xhr.status ~= 200 then
      return nil, "HTTP GET " .. xhr.statusText .. ": " .. url
    end
    return load (xhr.responseText, url, "t")
  end
  package.searchers [#package.searchers] = nil
  package.searchers [#package.searchers] = nil
  table.insert (package.searchers, function (mod_name)
    if not mod_name:match "/" then
      local full_url = "/lua/" .. mod_name
      local func, err = load_lua_over_http (full_url)
      if func ~= nil then return func end
      return "\n    " .. err
    end
  end)
  local Adapter = require "ardoises.js"
  Adapter {
    repository = {
      owner     = "<%- repository.owner.login %>",
      name      = "<%- repository.name %>",
      branch    = "<%- repository.branch %>",
      full_name = "<%- repository.full_name %>",
    },
    token      = "<%- user.token %>",
  }
</script>

<script>
  ((window.gitter = {}).chat = {}).options = {
    room: '<%- repository.owner.login %>/<%- repository.name %>',
    activationElement: '.js-gitter-toggle-chat-button',
  };
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.2/fetch.min.js"
        type="text/javascript">
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"
        type="text/javascript">
</script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
        type="text/javascript">
</script>
<script src="https://raw.githubusercontent.com/daurnimator/lua.vm.js/master/dist/lua.vm.js"
        type="text/javascript">
</script>
<script src="https://d3js.org/d3.v4.min.js"
        type="text/javascript"
        async defer>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/ace.js"
        type="text/javascript"
        async defer>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/mode-lua.js"
        type="text/javascript"
        async defer>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/theme-monokai.js"
        type="text/javascript"
        async defer>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/worker-lua.js"
        type="text/javascript"
        async defer>
</script>
<script src="https://sidecar.gitter.im/dist/sidecar.v1.js"
        type="text/javascript"
        async defer>
</script>

<script>
  /*
  var svg = d3.select("svg"),
      width = +svg.attr("width");
  var format = d3.format(",d");
  var color = d3.scaleOrdinal(d3.schemeCategory20c);
  var pack = d3.pack()
      .size([width, width])
      .padding(1.5);
  */
</script>
